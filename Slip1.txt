Q.1 Write a Java Program to implement I/O Decorator for converting uppercase letters to lower
case letters
package hello;
public interface ToLowerDecorator {
public void lower(String ch);
}
package hello;
importjava.lang.*;
import java.io.*;
public class LowerCase implements ToLowerDecorator{
public void lower(String ch)
{
ch=ch.toLowerCase();
System.out.println("Lowercase:"+ch);
}
}
package hello;
import java.io.*;
import java.util.Scanner;
public class main {
public static void main(String[] args)
{
ToLowerDecoratorl=newLowerCase();
Scanner sc=new Scanner(System.in);
System.out.println("enterch:");
String s= sc.nextLine();
System.out.println("entered ch:"+s);
l.lower(s);
}
}



Q.2 Write a program to sense the available networks using Arduino
#include <WiFi.h> // For ESP32. For ESP8266, use <ESP8266WiFi.h>
void setup() {
// Start the serial communication to see the output
Serial.begin(115200);

// Connect to Wi-Fi (no credentials needed for scanning)
WiFi.mode(WIFI_STA); // Set the Wi-Fi mode to station (client)
Serial.println("Scanning for Wi-Fi networks...");

// Start the scan for Wi-Fi networks
int networkCount = WiFi.scanNetworks(); // This function returns the number of networks
found

Serial.println("Scan complete.");

// If networks were found, print the list
if (networkCount == 0) {
Serial.println("No networks found.");
} else {
Serial.print(networkCount);
Serial.println(" networks found:");
for (int i = 0; i < networkCount; i++) {
// Print the SSID (network name), RSSI (signal strength), and Encryption type
Serial.print(i + 1);
Serial.print(": ");
Serial.print(WiFi.SSID(i)); // Network name (SSID)
Serial.print(" | Signal Strength: ");
Serial.print(WiFi.RSSI(i)); // Signal strength (in dBm)
Serial.print(" dBm | Encryption: ");
Serial.println(WiFi.encryptionType(i)); // Encryption type
}
}
}
void loop() {
// Nothing to do here as we only need to scan once
}