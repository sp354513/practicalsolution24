Q.1 Use Apriori algorithm on groceries dataset to find which items are brought
together. Use minimum support =0.25

import pandas as pd
from mlxtend.frequent_patterns import apriori, association_rules
data = {
    'Bread': [1, 1, 0, 1, 0],
    'Milk': [1, 0, 1, 1, 1],
    'Butter': [0, 1, 0, 1, 0],
    'Eggs': [1, 1, 1, 0, 0],
    'Cheese': [0, 1, 1, 1, 0]
}
transactions = pd.DataFrame(data)
frequent_itemsets = apriori(transactions, min_support=0.25, use_colnames=True)
print("Frequent itemsets with minimum support of 0.25:")
print(frequent_itemsets)
rules = association_rules(frequent_itemsets, metric="lift", min_threshold=1)
print("\nAssociation rules based on lift:")
print(rules)



Q.2. Write a Python program to prepare Scatter Plot for Iris Dataset. Convert Categorical
values in numeric format for a dataset

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.preprocessing import LabelEncoder
iris_data = load_iris()
df = pd.DataFrame(data=iris_data.data, columns=iris_data.feature_names)
df['species'] = iris_data.target
label_encoder = LabelEncoder()
df['species_numeric'] = label_encoder.fit_transform(df['species'])
print(df.head())
plt.figure(figsize=(8, 6))
sns.scatterplot(
    x=df[iris_data.feature_names[0]], 
    y=df[iris_data.feature_names[1]], 
    hue=df['species_numeric'],
    palette='viridis',
    style=df['species_numeric'],
    legend='full'
)
plt.title("Scatter Plot: Sepal Length vs Sepal Width")
plt.xlabel("Sepal Length (cm)")
plt.ylabel("Sepal Width (cm)")
plt.show()

