Q.1) Develop an Express.js application that defines routes for Create operations on a
resource (Movie)

const express = require('express');
const bodyParser = require('body-parser');
const app = express();
app.use(bodyParser.json());
let movies = [];
app.post('/movie', (req, res) => {
const { title, director, releaseYear, genre } = req.body;
if (!title || !director || !releaseYear || !genre) {
return res.status(400).json({
success: false,
message: 'All fields (title, director, releaseYear, genre) are required.'
});
}
const newMovie = {
id: movies.length + 1, 
title,
director,
releaseYear,
genre
};
movies.push(newMovie);
return res.status(201).json({
success: true,
message: 'Movie created successfully!',
data: newMovie
});
});
app.get('/movies', (req, res) => {
return res.status(200).json({
success: true,
data: movies
});
});
app.use((req, res) => {
return res.status(404).json({
success: false,
message: 'Route not found'
});
});
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
console.log(`Server running at http://localhost:${PORT}`);
});

Q.2) Create Angular application that print the name of students who play basketball
using filter and map method.

import { Component } from '@angular/core';
@Component({
selector: 'app-student-list',
templateUrl: './student-list.component.html',
styleUrls: ['./student-list.component.css']
})
export class StudentListComponent {
students = [
{ name: 'Alice', sports: ['Basketball', 'Football'] },
{ name: 'Bob', sports: ['Football', 'Cricket'] },
{ name: 'Charlie', sports: ['Basketball', 'Tennis'] },
{ name: 'David', sports: ['Cricket'] },
{ name: 'Eva', sports: ['Basketball', 'Hockey'] }
];
getBasketballPlayers() {
return this.students
.filter(student => student.sports.includes('Basketball'))
basketball
.map(student => student.name); 
}
}