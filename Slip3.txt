Q.1. Write a python program to implement multiple Linear Regression for a house
price dataset. Divide the dataset into training and testing data.


import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
data = pd.read_csv('house_prices.csv')
print("First few rows of the dataset:")
print(data.head())
print("\nChecking for null values:")
print(data.isnull().sum())
data = data.dropna()
and 'Price'
features = ['SquareFootage', 'Bedrooms', 'Bathrooms'] 
X = data[features]
y = data['Price'] 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,
random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"\nMean Squared Error: {mse}")
print(f"R-squared: {r2}")
print("\nModel Coefficients:")
for feature, coef in zip(features, model.coef_):
print(f"{feature}: {coef}")
print(f"Intercept: {model.intercept_}")
sample_input = [[2000, 3, 2]] 
predicted_price = model.predict(sample_input)
print(f"\nPredicted Price for {sample_input[0]}: {predicted_price[0]}")


Q.2. Use dataset crash.csv is an accident survivorâ€™s dataset portal for USA hosted by
data.gov. The dataset contains passengers age and speed of vehicle (mph) at the time
of impact and fate of passengers (1 for survived and 0 for not survived) after a crash.
use logistic regression to decide if the age and speed can predict the survivability of
the passengers.


import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
data = pd.read_csv('crash.csv')
print("First few rows of the dataset:")
print(data.head())
print("\nChecking for null values:")
print(data.isnull().sum())
data = data.dropna()
survivability
X = data[['age', 'speed']] 
y = data['fate'] 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,
random_state=42)
model = LogisticRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)
print(f"\nModel Accuracy: {accuracy:.2f}")
print("\nConfusion Matrix:")
print(conf_matrix)
print("\nClassification Report:")
print(class_report)
print("\nModel Coefficients:")
print(f"Age Coefficient: {model.coef_[0][0]}")
print(f"Speed Coefficient: {model.coef_[0][1]}")
print(f"Intercept: {model.intercept_[0]}")
