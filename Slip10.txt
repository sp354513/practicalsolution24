Q.1. Write a python program to transform data with Principal Component Analysis
(PCA). Use iris dataset.

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
from sklearn.datasets import load_iris
iris = load_iris()
X = iris.data 
y = iris.target 
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)
plt.figure(figsize=(8, 6))
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=y, cmap='viridis', edgecolor='k', s=50)
plt.title('PCA of Iris Dataset')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.colorbar(label='Target Class')
plt.show()
print(f'Explained variance ratio for each principal component:
{pca.explained_variance_ratio_}')

Q.2. Write a Python program to prepare Scatter Plot for Iris Dataset. Convert
Categorical values in to numeric.

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
iris = load_iris()
X = iris.data 
y = iris.target 
species_mapping = {0: 'setosa', 1: 'versicolor', 2: 'virginica'}
y_numeric = [species_mapping[i] for i in y]
iris_df = pd.DataFrame(X, columns=iris.feature_names)
iris_df['species'] = y_numeric 
plt.figure(figsize=(8, 6))
for species in iris_df['species'].unique():
subset = iris_df[iris_df['species'] == species]
plt.scatter(subset['sepal length (cm)'], subset['sepal width (cm)'], label=species)
plt.title('Sepal Length vs Sepal Width for Iris Dataset')
plt.xlabel('Sepal Length (cm)')
plt.ylabel('Sepal Width (cm)')
plt.legend(title='Species')
plt.grid(True)
plt.show()
